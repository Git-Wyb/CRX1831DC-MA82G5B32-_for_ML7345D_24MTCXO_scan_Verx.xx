C51 COMPILER V9.60.0.0   GPIO                                                              04/20/2022 17:16:49 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE GPIO
OBJECT MODULE PLACED IN .\Objects\gpio.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE user\src\gpio.c OPTIMIZE(0,SPEED) BROWSE INCDIR(.\include;.\user\inc) DE
                    -BUG OBJECTEXTEND PRINT(.\Listings\gpio.lst) OBJECT(.\Objects\gpio.obj)

line level    source

   1          #include "gpio.h"
   2          
   3          
   4          /***********************************************************************************
   5          函数名称:   void InitPort(void)
   6          功能描述:   IO配置
   7          输入参数:   
   8          返回参数:     
   9          *************************************************************************************/
  10          void Init_Port(void)
  11          { 
  12   1          /* CLOSE/STOP/OPEN: P10/P11/P12; TP7: P13 TestMode */
  13   1          PORT_SetP1OpenDrain(BIT0|BIT1|BIT2|BIT3);           // 设置P13 为开漏输出
  14   1          PORT_SetP1PushPull(BIT0|BIT1|BIT2);                 // 设置P10,P11,P12 为推挽输出
  15   1          P13 = 1;                                            // P13设为输入模式
  16   1          PORT_EnP10P11P12P13PullHigh();                      // 使能 P10,P11,P12,P13 上拉
  17   1          
  18   1          /* SPI */
  19   1          PORT_SetP1PushPull(BIT4|BIT5|BIT7);                                 // 设置P15(MOSI),P17(SPICLK)为准双向口
  20   1              PORT_SetP1OpenDrain(BIT6);                                                      // 设置P16(MISO)为准双向口
  21   1          P16 = 1;                                            // 输入
  22   1              PORT_EnP14P15P16P17PullHigh();                                          // 使能 P14,P15,P16,P17 上拉
  23   1          
  24   1          /*BEEP:P20; 登录:P21; 无线开关:T->P22,R->P23; 受信/动作/送信LED:P24/P25/P26; ML7345_RESETN:P27 */
  25   1              PORT_SetP2OpenDrain(BIT1);                          // 设置P21 为开漏输出
  26   1          P21 = 1;                                            // P21设为输入模式
  27   1          
  28   1      #if (NEW_PCB==0)   
                  PORT_SetP2PushPull(BIT0|BIT2|BIT3|BIT4|BIT5|BIT6|BIT7); // 设置P20,P22,P23,P24,P25,P26,P27 为推挽输出
              #else
  31   1          PORT_SetP2PushPull(BIT0|BIT2|BIT3|BIT5|BIT7);       // 设置P20,P22,P23,P25,P27 为推挽输出
  32   1          PORT_SetP2OpenDrain(BIT4);
  33   1          P24 = 1;
  34   1      #endif
  35   1          
  36   1          PORT_EnP20P21P22P23PullHigh();                      // 使能 P20,P21,P22,P23 上拉
  37   1              PORT_EnP24P25P26P27PullHigh();                              // 使能 P24,P25,P26,P27 上拉
  38   1          P20 = 0;
  39   1          
  40   1      #if (NEW_PCB==0)  
                  PORT_SetP3InputOnly(BIT5);
              #else
  43   1          //PORT_SetP3PushPull(BIT4|BIT5);
  44   1          PORT_SetP3QuasiBi(0xFF);                            //设置P3位准双向口模式
  45   1      #endif
  46   1       
  47   1          /* TP3/TP4: P40/P41 */
  48   1          PORT_SetP4OpenDrain(BIT0|BIT1);                     // 设置P40,P41 为开漏输出
  49   1          P40 = 1; P41 = 1;                                   // P40/p41 设为输入模式
  50   1          PORT_EnP40P41PullHigh();                            // 使能 P40,P41 上拉
  51   1          
  52   1          //////////////////////test/////////////////////////
  53   1          //PORT_SetP6PushPull(BIT0);   //CLK OUT
  54   1          //AUXR0 &= ~(P60OC0|P60OC1);
C51 COMPILER V9.60.0.0   GPIO                                                              04/20/2022 17:16:49 PAGE 2   

  55   1          //AUXR0 |= (0x80|P60FD);
  56   1          //////////////////////test/////////////////////////
  57   1          
  58   1          FG_allow_out = 1;
  59   1              FG_NOT_allow_out = 0;
  60   1          Receiver_LED_TX = 0;  
  61   1          Receiver_LED_RX = 0;  
  62   1          Receiver_LED_OUT = 0; 
  63   1          Receiver_OUT_OPEN = 0;
  64   1          Receiver_OUT_STOP = 0;
  65   1          Receiver_OUT_CLOSE = 0;
  66   1          ML7345_RESETN = 0;
  67   1      }
  68          
  69           
  70          
  71          
  72          
  73          /***********************************************************************************
  74          函数名称:   void InitINT0(void)
  75          功能描述:   INT0初始化
  76          输入参数:   
  77          返回参数:  
  78          用于ML7345D 发送接收完成中断。
  79          *************************************************************************************/
  80          #if (NEW_PCB==0)
              void Init_INT0(void)
              {
                      INT_SetINT0P32();                                               //设置INT0引脚P32
                      INT_SetINT0_DetectFallingEdge();                //设置INT0外部中断检测方式为下降沿检测
                      //INT_SetINT0_DetectRisingEdge();
                  INT_SetINT0Filter_Sysclk_x3();                      //设置INT0滤波为（sysclk）*3
              }
              #endif
  89          
  90          /***********************************************************************************
  91          函数名称:   void InitINT1(void)
  92          功能描述:   INT1初始化
  93          输入参数:   
  94          返回参数:   
  95          ML7345D BER测试。
  96          *************************************************************************************/
  97          #if (NEW_PCB==1)
  98          void Init_INT1(void)
  99          {
 100   1              INT_SetINT1P33();                                               //设置INT1引脚P33
 101   1              //INT_SetINT1_DetectRisingEdge();               
 102   1          INT_SetINT1_DetectFallingEdge();        //设置INT1外部中断检测方式为下降沿检测
 103   1              INT_SetINT1Filter_Sysclk_x3();                  //设置INT1滤波为（sysclk）*3
 104   1      }
 105          #endif
 106          
 107          /***********************************************************************************
 108          函数名称:   void INT_INT0(void) 
 109          功能描述:INT0中断服务程序
 110          输入参数:   
 111          返回参数: 
 112          
 113          用于ML7345D发送接收完成中断。
 114          
 115          *************************************************************************************/
 116          void INT_INT0(void)             interrupt INT_VECTOR_INT0
C51 COMPILER V9.60.0.0   GPIO                                                              04/20/2022 17:16:49 PAGE 3   

 117          {
 118   1              if(Flag_test_mode == 0) ML7345_TRX_Del();
 119   1          else DataReceive();
 120   1      }
 121          
 122          
 123          /***********************************************************************************
 124          函数名称:   void INT_INT1(void) 
 125          功能描述:INT1中断服务程序
 126          输入参数:   
 127          返回参数:    
 128          
 129          ML7345D BER测试。
 130          
 131          *************************************************************************************/
 132          void INT_INT1(void)             interrupt INT_VECTOR_INT1
 133          {
 134   1              if(Flag_test_mode == 0) ML7345_TRX_Del();
 135   1          else DataReceive();
 136   1      }
 137          
 138          
 139          /***********************************************************************************
 140          函数名称:   void InitInterrupt(void)
 141          功能描述:   中断初始化
 142          输入参数:    
 143          返回参数:     
 144          *************************************************************************************/
 145          void Init_Interrupt(void)
 146          {
 147   1      #if (NEW_PCB==0)
                  Init_INT0();
                  INT_EnINT0();                       //      使能INT0中断
              #else
 151   1          Init_INT1();
 152   1              INT_EnINT1();                   //      使能INT1中断
 153   1      #endif
 154   1          INT_EnTIMER0();                     //      使能T0中断
 155   1              INT_EnUART0();                  //      使能串口中断
 156   1      }
 157          
 158          
 159          /*
 160          u8 key_scan(void)
 161          {
 162              if((Receiver_Login==0 | TP3==0 | TP4==0 | Receiver_test==0))
 163              {
 164                  delay_ms(50);
 165                  if((Receiver_Login==0 | TP3==0 | TP4==0 | Receiver_test==0) && key_flag == 0)
 166                  {
 167                      key_flag = 1;
 168                      if(Receiver_Login==0) return 2;
 169                      else if (Receiver_test==0) return 3;
 170                      else return 1;
 171                  }
 172                  else return 0;
 173                      
 174              }
 175              else if(Receiver_Login==1 && TP3==1 && TP4==1 && Receiver_test==1)
 176              {
 177                  key_flag = 0;
 178                  return 0;
C51 COMPILER V9.60.0.0   GPIO                                                              04/20/2022 17:16:49 PAGE 4   

 179              }
 180              return 0;    
 181          }*/
 182          
 183          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    280    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
